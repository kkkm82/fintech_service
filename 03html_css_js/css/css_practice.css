/* 순서대로 처리해서 중복된게 있으면 밑에 코드 우선으로 실행됨 */
h2 {
    font-size: 24px;
    text-align: center;
    color: brown;
}

/* id 선택자 #id명 */
#hi {
    color: aquamarine;
    font-size: 30px;
}

/* 기본 속성 선택자 */
a[target="_blank"] {
    color: rgb(173, 69, 233);
    font-size: 15px;
}

/* 태그[속성~="값"] : 지정된 속성의 값이 지정된 값을(공백으로 분리된) 단어로 포함하는 요소를 선택 */
h1[title~="first"] {
    color: rgb(211, 120, 0);
}

/* 태그[속성|="값"] : 지정된 속성의 값이 일치하거나 지정된 속성 값 뒤에 하이픈으로 시작하는 요소를 선택*/
h2[title|="first"] {
    color: green;
}

/* 태그[속성^="값"] : 지정된 속성 값으로 시작하는 요소를 선택 */
a[href^="https"] {
    color:mediumseagreen
}

/* 태그[속성$="값"] : 지정된 속성 값으로 끝나는 요소를 선택 */
a[href$="com"] {
    color:rgb(39, 13, 155)
}

/* 태그[속성*="값"] : 지정된 속성 값을 포함하는 요소를 선택 */
div[class*="test"] {
    color:rgb(157, 181, 233)
}

/* 자손 선택자 : 부모태그 자손태그 */
div.grandpa p{
    color: plum;
}

/* 자식 선택자 : 부모태그 > 자식태그 */
div.parents > p{
    color: rgb(24, 211, 24);
}

/* 인접 형제 선택자 :  이전 선택자 + 대상 선택자 */
/* p요소의 형제 요소 중 p요소 바로 뒤에 위치하는 ul 요소 선택 */
.siblings p + ul {
    color: rgb(255, 0, 234);
}

/* 일반 형제 선택자 :  이전 선택자 ~ 대상 선택자 */
/* p요소의 형제 요소 중 p요소  뒤에 위치하는 모든 ul 요소 선택 */
.siblings2 p ~ ul {
    color: rgb(38, 221, 166);
}

/* 링크 셀렉터 
- link : 한 번도 방문한 적이 없는 링크
- visited : 한 번이라도 방문한 적이 있는 링크
- hover : 요소에 마우스를 올릴 때
- active : 요소를 마우스로 클릭하고 있을 때
- focus : 요소에 커서가 활성화되었을 때
*/

a:link {
    color: orange;

}

a:visited {
    color: gray;
}

a:hover {
    font-weight: bold;
    font-size: 50px;
}

a:active {
    background-color: crimson;
}

/* input 창에 커서가 들어와 있을 때 */
input[type=text]:focus {
    background-color: red;
}

/* 구조적 가상 클래스 선택자 */
div.structure p:first-child {
    background-color: blue;
}

div.structure2 p:last-child {
    background-color: red;
}

/* :nth-child(n) - 셀렉터에 해당하는 모든 요소 중 앞에서 n번째인 자식 요소를 선택
:nth-last-child(n) - 셀렉터에 해당하는 모든 요소 중 뒤에서 n번째 자식인 요소를 선택 
n = 0, 짝수 = 2n, 홀수 = 2n+1 */
div.nth_child ol > li:nth-child(2n) {
    color: hotpink;
}

div.nth_child ul > li:nth-last-child(2n+1) {
    color: rgba(99, 6, 52, 0.274);
}

/* :first-of-type - 셀렉터에 해당하는 요소의 부모 요소의 자식 중, 첫 번째에 등장하는 요소 선택
:last-of-type - 셀렉터에 해당하는 요소의 부모 요소의 자식 중, 마지막에 등장하는 요소 선택 
:nth-of-type(n) - 셀렉터에 해당하는 요소의 부모 요소의 자식 중, 앞에서 n번째에 등장한는 요소 선택
:nth-last-of-type(n) - 셀렉터에 해당하는 요소의 부모 요소의 자식 중, 뒤에서 n번째에 등장한는 요소 선택 */
div.nth_child2 p:first-of-type {
    color: mediumslateblue;
}

div.nth_child2 p:last-of-type {
    color: rgba(67, 58, 114, 0.829);
}

div.nth_child2 p:nth-of-type(3) {
    color: rgb(255, 0, 0);
}

div.nth_child2 p:nth-last-of-type(3) {
    color: rgb(255, 0, 119);
}

/* 정합성 체크 셀렉터
:valid - 정합성 검증이 성공한 input 요소/form 요소 선택 
:invalid - 정합성 검증이 실패한 input 요소/form 요소 선택 */
div.check input[type="text"]:valid {
    background-color: green;
}

div.check input[type="text"]:invalid {
    background-color: rgb(175, 255, 175);
}

/* 가상 요소 셀렉터 
::first-letter - 콘텐츠의 첫 글자 선택 
::first-line - 콘텐츠의 첫 줄 선택(블록 요소에만 적용)
::after - 콘텐츠의 뒤에 위치하는 공간 선택, content와 함께 사용
::before - 콘텐츠의 앞에 위치하는 공간 선택, content와 함께 사용
::selection - 드래그한 콘텐츠 선택 */
div.pseudo_ele p::first-letter { 
    font-size: 3em; 
}

div.pseudo_ele p::first-line { 
    color: rgb(245, 118, 118); }

div.pseudo_ele h1::before {
    content: " HTML!!! ";
    color: blue;
}
   
div.pseudo_ele h1::after {
    content: " CSS!!!";
    color: red;
}

div.pseudo_ele ::selection {
    color: red;
    background: yellow;
}